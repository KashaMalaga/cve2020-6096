
#include <jni.h>
#include <string>
#include <string.h>
#include <stdio.h>
#include <android/log.h>

#define LOGI(...) ((void)__android_log_print(ANDROID_LOG_INFO, "exploit", __VA_ARGS__))


#if _FORTIFY_SOURCE != 0
#error Expected _FORTIFY_SOURCE=0
#endif

struct linebuffer {
    int bufsz;
    int nl_pos;
    int len;
    char buf[2048];
};

void do_memcpy(void)
{
    struct linebuffer lb;
    memset(&lb, 0, sizeof(lb));
    memset(lb.buf, 'A', 2048);
    lb.len = 0xfffffd37;

    memcpy(lb.buf, lb.buf + 1024, lb.len);
}
int main()
{
    std::string test = " mate";
    int a = 1;
    LOGI("before memcpy", a, test.c_str());
    do_memcpy();
    LOGI("after memcpy", a, test.c_str());
}
extern "C"
JNIEXPORT jstring JNICALL
Java_com_kasha_cve2020_16096_MainActivity_stringFromJNI(JNIEnv *env, jobject thiz) {
    // TODO: implement stringFromJNI()
    std::string hello = "Hey";
    main();
    return env->NewStringUTF(hello.c_str());
}